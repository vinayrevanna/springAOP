<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
   http://www.springframework.org/schema/aop 
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context.xsd">

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy> <!-- we are using aspect oriented programming -->

	<bean name="triangle" class="org.vinay.learnAop.model.Triangle">
		<!-- <property name="name" value="Triangle name" /> -->
	</bean>

	<bean name="circle" class="org.vinay.learnAop.model.Circle">
		<!-- <property name="name" value="Circle name" /> -->
	</bean>

	<bean name="shapeService" class="org.vinay.learnAop.service.ShapeService"
		autowire="byName"></bean>

	<!-- <bean name="loggingAspect" class="org.vinay.learnAop.aspect.LoggingAspect"></bean> -->

	<bean name="loggingAspect" class="org.vinay.learnAop.aspect.LoggingAspect1" />

	<!-- LogginAspect1 is transformed into spring.xml only without @annotations 
	reason for xml - legacy support from old code before annotation support was introduced
	-->
	<aop:config>
	<!-- 	<aop:aspect id="loggingAspect" ref="loggingAspect">
			<aop:pointcut id="allGetters" expression="execution(* get*())" />
			<aop:around pointcut-ref="allGetters" method="myAroundAdvice" />
		</aop:aspect> -->
		<aop:aspect id="loggingAspect" ref="loggingAspect">
			<aop:around pointcut="execution(* get*())" method="myAroundAdvice" />
		</aop:aspect>
	</aop:config>


</beans>
